#!/usr/bin/env python
import os

from pathlib import Path

ROS_DISTRO = os.environ.get("ROS_DISTRO")
ROS_DIR = f"/opt/ros/{ROS_DISTRO}"
NAME = "rosbridge"
DEST = "bin"


env = SConscript("godot-cpp/SConstruct")

# For reference:
# - CCFLAGS are compilation flags shared between C and C++
# - CFLAGS are for C-specific compilation flags
# - CXXFLAGS are for C++-specific compilation flags
# - CPPFLAGS are for pre-processor flags
# - CPPDEFINES are for pre-processor defines
# - LINKFLAGS are for linking flags


# Helper functions to read ros headers and ros libraries
def getSubDirs(base_path: str):
    return [
        path
        for name in os.listdir(base_path)
        if os.path.isdir(path := os.path.join(base_path, name))
    ]


def getLibNames(base_path: str):
    return [
        name
        for name in os.listdir(base_path)
        if os.path.isfile(os.path.join(base_path, name))
        if name.endswith(".so") or name.endswith(".a")
    ]


# tweak this if you want to use different folders, or more folders, to store your source code in.
env.Append(CPPPATH=["src/"])
sources = Glob("src/*.cpp")

# ROS 2 configuration
env.Append(CPPPATH=getSubDirs(f"{ROS_DIR}/include"))
env.Append(CCFLAGS=["-fexceptions"])
env.Append(LIBPATH=[f"{ROS_DIR}/lib"])
env.Append(LIBS=getLibNames(f"{ROS_DIR}/lib"))

# compile_commands
env["COMPILATIONDB_USE_ABSPATH"] = True
env.Tool("compilation_db")
env.CompilationDatabase()

if env["platform"] == "macos":
    library = env.SharedLibrary(
        f"{DEST}/lib{NAME}.{env['platform']}.{env['target']}.framework/lib{NAME}.{env['platform']}.{env['target']}",
        source=sources,
    )
else:
    library = env.SharedLibrary(
        f"{DEST}/lib{NAME}{env['suffix']}{env['SHLIBSUFFIX']}",
        source=sources,
    )

Default(library)
